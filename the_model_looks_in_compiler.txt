the model will look like while training

Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv2d (Conv2D)              (None, 130, 130, 16)      1216      
_________________________________________________________________
max_pooling2d (MaxPooling2D) (None, 8, 8, 16)          0         
_________________________________________________________________
dropout (Dropout)            (None, 8, 8, 16)          0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 8, 8, 16)          6416      
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 2, 2, 16)          0         
_________________________________________________________________
dropout_1 (Dropout)          (None, 2, 2, 16)          0         
_________________________________________________________________
flatten_1 (Flatten)          (None, 64)                0         
_________________________________________________________________
dense_1 (Dense)              (None, 16)                1040      
_________________________________________________________________
dense_2 (Dense)              (None, 3)                 51        
_________________________________________________________________
dense_3 (Dense)              (None, 3)                 12        
=================================================================
Total params: 8,735
Trainable params: 8,735
Non-trainable params: 0
_________________________________________________________________
Epoch 1/10
50/50 [==============================] - 17s 323ms/step - loss: 1.0603 - accuracy: 0.4367 - val_loss: 1.0019 - val_accuracy: 0.4941
Epoch 2/10
50/50 [==============================] - 15s 310ms/step - loss: 1.0048 - accuracy: 0.4089 - val_loss: 1.0005 - val_accuracy: 0.4941
Epoch 3/10
50/50 [==============================] - 16s 314ms/step - loss: 0.9697 - accuracy: 0.4456 - val_loss: 0.9943 - val_accuracy: 0.4941
Epoch 4/10
50/50 [==============================] - 15s 309ms/step - loss: 0.9920 - accuracy: 0.4638 - val_loss: 0.9815 - val_accuracy: 0.4941
Epoch 5/10
50/50 [==============================] - 16s 313ms/step - loss: 0.9687 - accuracy: 0.5142 - val_loss: 0.9484 - val_accuracy: 0.8320
Epoch 6/10
50/50 [==============================] - 15s 310ms/step - loss: 0.9010 - accuracy: 0.7504 - val_loss: 0.7769 - val_accuracy: 0.7871
Epoch 7/10
50/50 [==============================] - 16s 315ms/step - loss: 0.6974 - accuracy: 0.8264 - val_loss: 0.4468 - val_accuracy: 0.8516
Epoch 8/10
50/50 [==============================] - 15s 309ms/step - loss: 0.4056 - accuracy: 0.8539 - val_loss: 0.2486 - val_accuracy: 0.8555
Epoch 9/10
50/50 [==============================] - 15s 309ms/step - loss: 0.2537 - accuracy: 0.8776 - val_loss: 0.1619 - val_accuracy: 0.9727
Epoch 10/10
50/50 [==============================] - 16s 313ms/step - loss: 0.1660 - accuracy: 0.9497 - val_loss: 0.1095 - val_accuracy: 0.9980
28/28 [==============================] - 3s 107ms/step - loss: 0.1066 - accuracy: 0.9955

result is like

test loss, test acc: [0.10655152797698975, 0.9955207109451294]

the confusion matrix be like

[[396   0   0]
 [  0 122   0]
 [  1   3 371]]